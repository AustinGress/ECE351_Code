################################################################
#
# Austin Gress
# ECE 351-51
# Lab: 8
# Due Date: 3/31/20
# Additional Comments:
################################################################

import numpy as np
import matplotlib.pyplot as plt
import scipy.signal as sig
# import control as con
# import pandas as pd


b = np.zeros((4,1))
for k in np.arange(1,4):
    b[k] = 2/(k*np.pi)*(1-np.cos(k*np.pi))

    
a0 = 0
a1 = 0
b1 = b[1]
b2 = b[2]
b3 = b[3]

print('a0 = ', a0, '\na1 = ', a1, '\nb1 = ', b1, '\nb2 = ', b2,'\nb3 = ',b3)


steps = 1e-4
T = 8
t = np.arange(0, 20 + steps, steps)
N = [1, 3, 15, 50, 150, 1500]
y = 0
       
#DONT FORGET TO ADD 1! Can't plug 1 into sine for first term. Python gets angry.
for k in np.arange(1, N[0]+1):
            
    b = 2/(k*np.pi)*(1-np.cos(k*np.pi))
            
    x = b*np.sin(k*(2*np.pi/T)*t)
            
    y += x

plt.figure(1, figsize = (10,7))
plt.subplot(3, 1, 1)
plt.plot(t,y)
plt.grid()
plt.ylabel('N = 1')
plt.title('Fourier Series Approximations of x(t)')        
y = 0    
    
    
    
for k in np.arange(1, N[1]+1):
            
    b = 2/(k*np.pi)*(1-np.cos(k*np.pi))
            
    x = b*np.sin(k*(2*np.pi/T)*t)
            
    y += x
            
plt.subplot(3, 1, 2)
plt.plot(t,y)
plt.grid()
plt.ylabel('N = 3')
y = 0

for k in np.arange(1, N[2]+1):
            
    b = 2/(k*np.pi)*(1-np.cos(k*np.pi))
            
    x = b*np.sin(k*(2*np.pi/T)*t)
            
    y += x
            
plt.subplot(3, 1, 3)
plt.plot(t,y)
plt.grid()
plt.ylabel('N = 15')
plt.xlabel('t[s]')  
y = 0

for k in np.arange(1, N[3]+1):
            
    b = 2/(k*np.pi)*(1-np.cos(k*np.pi))
            
    x = b*np.sin(k*(2*np.pi/T)*t)
            
    y += x
            
plt.figure(2, figsize = (10,7))
plt.subplot(3, 1, 1)
plt.plot(t,y)
plt.grid()
plt.ylabel('N = 50')
plt.title('Fourier Series Approximations of x(t)')        
y = 0

for k in np.arange(1, N[4]+1):
            
    b = 2/(k*np.pi)*(1-np.cos(k*np.pi))
            
    x = b*np.sin(k*(2*np.pi/T)*t)
            
    y += x

plt.subplot(3, 1, 2)
plt.plot(t,y)
plt.grid()
plt.ylabel('N = 150')
y = 0            

for k in np.arange(1, N[5]+1):
            
    b = 2/(k*np.pi)*(1-np.cos(k*np.pi))
            
    x = b*np.sin(k*(2*np.pi/T)*t)
            
    y += x
                
plt.subplot(3, 1, 3)
plt.plot(t,y)
plt.grid()
plt.ylabel('N = 1500')
plt.xlabel('t[s]')
y = 0
